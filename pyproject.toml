[build-system]
requires = [
    "meson-python >= 0.16.0",
    "meson >= 1.4.1",
    "patchelf >= 0.17.2",
    "ninja >= 1.11.1",
    "wheel>=0.43.0",
]
build-backend = "mesonpy"

[project]
name = "perun-toolsuite"
description = "Perun: Lightweight Performance Version System"
requires-python = ">=3.9"
readme = "README.md"
license = { file = "LICENSE" }
authors = [
    {name = "Tomas Fiedor", email = "TomasFiedor@gmail.com"},
    {name = "Jiri Pavela", email = "Jirka.Pavela@gmail.com"},
    {name = "Radim Podola", email = "rpodola@gmail.com"},
    {name = "Simon Stupinsky", email = "simondestupinsky@gmail.com"},
    {name = "Matus Liscinsky"},
    {name = "Peter Mocary"},
    {name = "Ondrej Michal"},
    {name = "Vojtech Hajek"},
    {name = "Vladimir Hucovic"}
]
dependencies = [
    # Build
    "meson-python>=0.16.0",
    "meson>=1.4.1",
    "ninja>=1.11",
    "wheel>=0.43.0",

    # Lazy loading
    "lazy-loader>=0.4",

    # Other
    "psutil>=6.0.0",

    # CLI
    "click>=8.1.7",

    # VCS integration
    "GitPython>=3.1.43",
    "gitdb>=4.0.10",

    # String / text utilities
    "Faker>=26.0.0",
    "ruamel.yaml>=0.18.6",
    "Jinja2>=3.1.5",

    # File analysis
    "python-magic>=0.4.27",
    "angr>=9.2.102",

    # Science / math / statistics / ML
    "numpy>=2.0.0",
    "pandas>=2.2.2",
    "statsmodels>=0.14.2",
    "scikit-learn>=1.5.1",
    "scipy>=1.13",
    "networkx>=3.2.1",

    # Plotting / visualization / output
    "bokeh>=3.4.2",
    "matplotlib>=3.9.0",
    "termcolor>=2.4.0",
    "tabulate>=0.9.0",
    "holoviews>=1.19.0",
    "progressbar2>=4.4.2",

    # Some of our dependencies still rely on distutils in 3.12, hence we need the setuptools package
    "setuptools>=70.2.0; python_version >= '3.12'"
]
dynamic = ["version"]

[project.optional-dependencies]
docs = [
    "Sphinx>=7.3.7",
    "sphinx-click>=6.0.0",
]
lint = [
    "pre-commit>=3.7.1",
    "black>=24.4.2",
    "pylint>=3.2.5",
]
test = [
    "pytest>=8.2.2",
    "pytest-cov>=5.0.0",
    "tox>=4.16.0",
]
typing = [
    "mypy>=1.10.1",
    "mypy-extensions>=1.0.0",
    "typing-extensions>=4.12.2",
    "types-tabulate>=0.9.0",
    "pandas-stubs>=2.2.2",
    "types-psutil>=6.0.0"
]

[project.urls]
Repository = "https://github.com/Perfexionists/perun.git"
Demonstration = "https://www.fit.vutbr.cz/research/groups/verifit/tools/perun-demo/"
Changelog = "https://github.com/Perfexionists/perun/blob/master/CHANGELOG.rst"

[project.scripts]
perun = "perun.cli:launch_cli"

# Mypy configuration
# ----------------------
[tool.mypy]
plugins = [
    "numpy.typing.mypy_plugin"
]
exclude = [
    ".git",
    ".mypy_cache",
    ".tox",
    "build",
    "docs",
    "perun.egg-info",
    "perun_toolsuite.egg-info",
    "venv",
    # Fixme: Temporary exclude
    "perun/collect/trace"
]
disallow_incomplete_defs = true
disallow_any_generics = true
no_implicit_optional = true
no_implicit_reexport = true
strict_equality = true
warn_redundant_casts = true
warn_unused_ignores = true

# Some packages are not shipping type hints yet, ignore the 'missing import' errors
[[tool.mypy.overrides]]
module = [
    "networkx.*",
    "matplotlib.*",
    "scipy.*",
    "sklearn.*",
    "statsmodels.*",
    "holoviews.*",
    "bcc.*",
    "lazy_loader.*",
]
ignore_missing_imports = true

# Ignore thirdparty package as it contains ported code that is hard to type
[[tool.mypy.overrides]]
module = [
    "perun.thirdparty.*"
]
ignore_errors = true

# Fixme: Temporary, we omit trace from checking
[[tool.mypy-overrides]]
module = [
    "perun.collect.trace.*"
]
ignore_errors = true
follow_imports = "skip"

# Pylint configuration
# --------------------
[tool.pylint]
ignore-paths = [
    "perun/thirdparty/*"
]


# Pytest configuration
# --------------------
[tool.pytest.ini_options]
addopts = "-p no:warnings -p no:logging"
norecursedirs = [
    "case-studies",
    "venv",
    "docs",
    "*.egg-info",
    ".git",
    ".tox",
    "build",
    ".mypy_cache",
    "perun/thirdparty"
]

# Coverage configuration
# ----------------------
[tool.coverage.run]
source = [
    "perun",
]
omit = [
    "tests/*",
    "perun/collect/trace/*",
    "perun/thirdparty/*"
]

[tool.coverage.report]
exclude_also = [
    # Exclude type checking specific lines, that are never executed
    "if TYPE_CHECKING:",

    # Exclude protocols, that are used for type checking
    "class CallableDetectionMethod(Protocol):",
    "class Comparable(Protocol):",

    # Exclude overloads, that are used for type checking
    "@overload",

    # Not implemented asserst are omitted
    "assert NotImplementedError(.*)",

    # Exclude lines that run the module as script
    'if __name__ == "__main__":'
]

# Formatting configuration
# ----------------------
[tool.black]
target-version = [
    "py39",
    "py310",
    "py311",
    "py312",
]
line-length = 100
