{% import 'ssp_table.html.jinja2' as table_generator %}

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
        <meta name="viewport" content="width=device-width, initial-scale=1.0">
        <title>{{ title }}</title>

        {% if not offline %}
        <link rel="stylesheet" href="https://fonts.googleapis.com/icon?family=Material+Icons">
        {% endif %}

        <link rel="stylesheet" href="style/general_setup.css">
        <link rel="stylesheet" href="style/layout.css">

        <link rel="stylesheet" href="style/division_anchor.css">

        <link rel="stylesheet" href="style/side_panel.css">
        <link rel="stylesheet" href="style/notes_sidebar.css">
        <link rel="stylesheet" href="style/general_sidebar.css">

        <link rel="stylesheet" href="style/pins.css">
        <link rel="stylesheet" href="style/tag.css">
</head>
<body>

    <div>
        <h2 class="tag-baseline division_anchor division_anchor__baseline">{{ lhs_tag }}</h2>
        <h2 class="tag-target division_anchor division_anchor__target">{{ rhs_tag }}</h2>
    </div>

    <div class="side-panel navigation-panel">
        <a href="#general">
            <span class="material-icons">home</span>
            <span class="side-panel__description">General</span>
        </a>
        <a href="#profile-vulnerabilities">
            <span class="material-icons">gpp_maybe</span>
            <span class="side-panel__description">Vulnerabilities</span>
        </a>
        <a href="#profile-stats">
            <span class="material-icons">equalizer</span>
            <span class="side-panel__description">Profile Stats</span>
        </a>
        <a href="#profile-metadata">
            <span class="material-icons">account_tree</span>
            <span class="side-panel__description">Profile Metadata</span>
        </a>
        <a href="#flame">
            <span class="material-icons">local_fire_department</span>
            <span class="side-panel__description">Flame Graphs</span>
        </a>
        <a href="#sankey">
            <span class="material-icons">timeline</span>
            <span class="side-panel__description">Sankey Graph</span>
        </a>
    </div>

    <div class="notes-sidebar">
        <span class="material-icons general-sidebar__icon">push_pin</span>
        <a> <p id="export-notes">Export with notes</p> </a>
        <div class="notes-sidebar-content">
            <div id="notes-list">
                <!-- place for added notes -->
            </div>
        </div>
    </div>

    <div class="section" id="general">
        <div class="section-header">
            <h1>Perun Performance Analysis</h1>
            <span class="material-icons pin-icon pin-icon__header" data-section="General">push_pin</span>
        </div>
        <p>Perun version: v{{ perun_version }}</p
        <p>Generated on: {{ timestamp }}</p>

        <div class="comparison-container">
            {{ table_generator.general_comparison_container('baseline', 'general', lhs_header) }}
            {{ table_generator.general_comparison_container('target', 'general', rhs_header) }}
        </div>
    </div>

    <div id="profile-vulnerabilities" class="section">
        <div class="section-header">
            <h1>Vulnerabilities</h1>
            <span class="material-icons pin-icon" data-section="Vulnerabilities">push_pin</span>
        </div>

        <!-- HERE WILL BE VULNERABILITIES SCRIPT -->
    </div>

    <div id="profile-stats" class="section">
        <div class="section-header">
            <h1>Profile Statistics</h1>
            <span class="material-icons pin-icon" data-section="Profile Statistics">push_pin</span>
        </div>

        <div class="comparison-container">
            {{ table_generator.general_comparison_container('baseline', 'profile-stats', lhs_stats) }}
            {{ table_generator.general_comparison_container('target', 'profile-stats', rhs_stats) }}
        </div>
    </div>

    <div id="profile-metadata" class="section">
        <div class="section-header">
            <h1>Profile Metadata</h1>
            <span class="material-icons pin-icon" data-section="Profile Metadata">push_pin</span>
        </div>

        <div class="comparison-container">
            {{ table_generator.general_comparison_container('baseline', 'profile-metadata', lhs_metadata) }}
            {{ table_generator.general_comparison_container('target', 'profile-metadata', rhs_metadata) }}
        </div>
    </div>

    <script>
        document.addEventListener("DOMContentLoaded", () => {
            const notesList = document.getElementById("notes-list");

            function attachInputListener(noteInput) {
                noteInput.addEventListener("input", (event) => {
                    const noteItemContent = event.target.closest(".note-item--content");
                    if (noteItemContent) {
                        noteItemContent.dataset.noteValue = event.target.value;
                    }

                    event.target.style.height = "auto";
                    event.target.style.height = `${event.target.scrollHeight}px`;
                });
            }

            function toggleNoteStatus(noteItem, statusButton) {
                const isAttention = statusButton.classList.contains("attention");
                if (isAttention) {
                    statusButton.textContent = "Waived";
                    statusButton.classList.remove("attention");
                    statusButton.classList.add("approved");
                    noteItem.classList.remove("note-item--attention");
                    noteItem.classList.add("note-item--approved");
                } else {
                    statusButton.textContent = "Attention";
                    statusButton.classList.remove("approved");
                    statusButton.classList.add("attention");
                    noteItem.classList.remove("note-item--approved");
                    noteItem.classList.add("note-item--attention");
                }
            }

            function addNoteForSection(sectionId) {
                const noteItem = document.createElement("div");
                noteItem.classList.add("note-item", "note-item--attention");

                noteItem.innerHTML = `
        <p><b><a href="#${sectionId}" class="note-link">${sectionId}:</a> </b></p>
        <div class="note-item--content" data-note-value="">
            <textarea class="note-input" placeholder="Enter your note"></textarea>
            <span class="material-icons" style="cursor: pointer; margin: 0">delete</span>
            <button class="note-status-toggle attention">Attention</button>
        </div>`;

                const noteInput = noteItem.querySelector(".note-input");
                attachInputListener(noteInput);

                noteItem.querySelector("span").onclick = () => noteItem.remove();

                const statusButton = noteItem.querySelector(".note-status-toggle");
                statusButton.addEventListener("click", () => toggleNoteStatus(noteItem, statusButton));

                notesList.appendChild(noteItem);
            }

            document.querySelectorAll(".pin-icon").forEach(pin => {
                pin.onclick = () => {
                    addNoteForSection(pin.dataset.section);
                    pin.parentElement.setAttribute("id", pin.dataset.section.toString());
                }
            });

            document.getElementById('export-notes').addEventListener('click', function () {
                const currentHTML = document.documentElement.outerHTML;

                const parser = new DOMParser();
                const doc = parser.parseFromString(currentHTML, 'text/html');

                const notesList = doc.querySelector('#notes-list');
                if (notesList) {
                    const noteItems = notesList.children;
                    Array.from(noteItems).forEach(noteItem => {
                        const noteContentDiv = noteItem.querySelector('.note-item--content');
                        if (noteContentDiv) {
                            const noteValue = noteContentDiv.dataset.noteValue || "Empty note";
                            const noteContent = document.createElement('p');
                            noteContent.textContent = noteValue;
                            noteContentDiv.replaceWith(noteContent);
                        }
                    });
                }
                const updatedHTML = `<!DOCTYPE html>\n${doc.documentElement.outerHTML}`;

                const blob = new Blob([updatedHTML], { type: 'text/html' });

                const link = document.createElement('a');
                link.href = URL.createObjectURL(blob);
                link.download = 'updated_page_with_notes.html';
                link.click();
            });
        });

        document.addEventListener("DOMContentLoaded", () => {
            document.querySelectorAll(".general-property").forEach((property) => {
                const toggleArrow = property.querySelector(".toggle-arrow");
                const generalValues = property.querySelector(".general-values");

                generalValues.style.height = "auto";

                toggleArrow.addEventListener("click", () => {
                    if (generalValues.classList.contains("collapsed")) {
                        generalValues.classList.remove("collapsed");
                        generalValues.style.height = `${generalValues.scrollHeight}px`;
                        toggleArrow.classList.remove("collapsed");
                    } else {
                        generalValues.style.height = `${generalValues.scrollHeight}px`;
                        requestAnimationFrame(() => {
                            generalValues.style.height = "0";
                        });
                        generalValues.classList.add("collapsed");
                        toggleArrow.classList.add("collapsed");
                    }
                });

                generalValues.addEventListener("transitionend", () => {
                    if (!generalValues.classList.contains("collapsed")) {
                        generalValues.style.height = "auto";
                    }
                });
            });
        });
    </script>

</body>
</html